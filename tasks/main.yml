---
# NOTES
# -----

# ATT
# ---
# only implemented state is "enabled"

- name: systemd-networkd role
  tags:
    - systemd-networkd
  block:

  # systemd_networkd.state
  - when: systemd_networkd.state == "enabled"
    block:

    # NetworkManager
    - name: Stop & disable NetworkManager.service
      become: true
      ansible.builtin.systemd_service:
        name: NetworkManager.service
        state: stopped
        enabled: false
      failed_when: false

    # systemd-networkd.service
    - name: Start & enable systemd-networkd.service
      become: true
      ansible.builtin.systemd_service:
        name: systemd-networkd.service
        state: started
        enabled: true

  # mkdir
  - name: Mkdir /etc/systemd/network
    ansible.builtin.file:
      path: /etc/systemd/network
      state: directory
      owner: root
      group: root
      mode: o=rwx,g=rx,o=rx

  # cp config
  - when: systemd_networkd.config.files.cp | length > 0
    block:
    
    # cp
    - name: Copy config files {{ systemd_networkd.config.files.cp }}
      become: true
      loop: "{{ systemd_networkd.config.files.cp }}"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/systemd/network/

  # templates
  - when: systemd_networkd.config.templates | length > 0
    block:
    
    # template
    - name: Template config files {{ systemd_networkd.config.templates }}
      become: true
      loop: "{{ systemd_networkd.config.templates }}"
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "/etc/systemd/network/{{ item.split('/')[1].replace('.j2', '') }}" # # ziska/wg-alfdorf.netdev.j2 --> wg-alfdorf.netdev.j2 --> wg-alfdorf.netdev
        mode: o=rw,g=,o=

  # rm config
  - when: systemd_networkd.config.files.rm | length > 0
    block:
    
    # rm
    - name: Remove config files {{ systemd_networkd.config.files.rm }}
      become: true
      loop: "{{ systemd_networkd.config.files.rm }}"
      ansible.builtin.file:
        path: "/etc/systemd/network/{{ item }}"
        state: absent
